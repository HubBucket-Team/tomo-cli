"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.tasks=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_path=require("path"),_utils=require("../../utils"),_common=require("../../utils/common"),_Scaffolder=require("../../utils/Scaffolder");const DEPENDENCIES=["apollo-server-express","compression","config","cookie-session","dotenv","ejs","express","express-session","fs-extra","graphql","helmet","lusca","remarkable","highlight.js","uuid","npmlog","protocolify","ws"],DEV_DEPENDENCIES=["nodemon","open-cli","stmux","supertest"],ALWAYS=()=>!0,tasks=[{text:"Copy server files",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _Scaffolder.Scaffolder({sourceDirectory:(0,_path.join)(__dirname,"templates")}).target("./").copy(".env").copy("favicon.ico").copy("_gitignore",".gitignore").copy("index.js").copy("server.js").copy("socket.js").copy("graphql.js").target("config").copy("default.js").copy("default.js","test.js").target("ssl").copy("server.key").copy("server.cert").target("public").copy("index.html").copy("example.md").target("__tests__").overwrite(!0).copy("example.test.js").commit()});return function task(){return a.apply(this,arguments)}}(),condition:ALWAYS},{text:"Configure metadata and add tasks to package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){const a="index.js";yield new _utils.PackageJsonEditor().extend({description:"Node.js HTTP(S), WebSocket, and GraphQL servers with an 80% solution for security 'baked in'",main:a,name:"tomo-server",scripts:{predev:"npm run open",dev:"stmux [ \"nodemon index.js\" : \"npm run lint:watch\" ]",prestart:"npm audit",start:`node ${a}`,open:"open-cli http://localhost:8111"}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.allDoExist)("package.json")},{text:"Configure .eslintrc.js for use with Node.js",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _utils.EslintConfigModuleEditor().extend({env:{node:!0}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.allDoExist)(".eslintrc.js"),optional:()=>(0,_common.allDoExistSync)(".eslintrc.js")},{text:"Install server dependencies",task:function(){var a=(0,_asyncToGenerator2.default)(function*({skipInstall:a}){yield(0,_utils.install)(DEPENDENCIES,{skipInstall:a}),yield(0,_utils.install)(DEV_DEPENDENCIES,{dev:!0,skipInstall:a})});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.allDoExist)("package.json")}];exports.tasks=tasks;var _default=tasks;exports.default=_default;