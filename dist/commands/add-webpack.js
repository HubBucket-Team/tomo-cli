"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.removeWebpack=exports.addWebpack=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_utils=require("../utils"),_common=require("../utils/common");const BUILD_DEPENDENCIES=["cpy-cli","del-cli","npm-run-all"],WEBPACK_DEPENDENCIES=["webpack","webpack-cli","webpack-dashboard","webpack-jarvis","webpack-dev-server","babel-loader"],addWebpack=[{text:"Create Webpack configuration file",task:function(){var a=(0,_asyncToGenerator2.default)(function*({sourceDirectory:a}){yield new _utils.WebpackConfigEditor().create().prepend(`const DashboardPlugin = require('webpack-dashboard/plugin');`).prepend(`const {resolve} = require('path');`).prepend(`/* eslint-env node */`).extend({entry:{app:`'${a}/main.js'`},resolve:{modules:`[resolve(__dirname, '${a}'), 'node_modules']`}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.allDoNotExist)("webpack.config.js")},{text:"Add build tasks to package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*({outputDirectory:a,sourceDirectory:b}){yield new _utils.PackageJsonEditor().extend({scripts:{copy:"npm-run-all --parallel copy:assets copy:index","copy:assets":`cpy './assets/!(css)/**/*.*' './assets/**/[.]*' ${a} --parents --recursive`,"copy:index":`cpy './assets/index.html' ${a}`,prebuild:`del-cli ${a}/assets`,build:"webpack",postbuild:"npm run copy","build:watch":`watch 'npm run build' ${b}`,"build:dashboard":"webpack-dashboard -- webpack-dev-server --config ./webpack.config.js"}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.someDoExist)("package.json")},{text:"Install development dependencies and add dev task to package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*({skipInstall:a}){yield(0,_utils.install)(["stmux"],{dev:!0,skipInstall:a}),yield new _utils.PackageJsonEditor().extend({scripts:{dev:"stmux [ \"npm run build:dashboard\" : \"npm run lint:watch\" ]"}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.allDoExist)("package.json",".eslintrc.js"),optional:()=>(0,_common.allDoExistSync)("package.json",".eslintrc.js")},{text:"Install Webpack and development dependencies",task:({skipInstall:a})=>(0,_utils.install)([...BUILD_DEPENDENCIES,...WEBPACK_DEPENDENCIES],{dev:!0,skipInstall:a}),condition:({isNotOffline:a})=>a&&(0,_common.someDoExist)("package.json")}];exports.addWebpack=addWebpack;const removeWebpack=[{text:"Delete Webpack configuration file",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _utils.WebpackConfigEditor().delete().commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.someDoExist)("webpack.config.js")},{text:"Remove Webpack build tasks from package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _utils.PackageJsonEditor().extend({scripts:{copy:void 0,"copy:assets":void 0,"copy:index":void 0,prebuild:void 0,build:void 0,postbuild:void 0,"build:watch":void 0,"build:dashboard":void 0}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_common.someDoExist)("package.json")},{text:"Uninstall Webpack dependencies",task:()=>(0,_utils.uninstall)([...BUILD_DEPENDENCIES,...WEBPACK_DEPENDENCIES]),condition:({skipInstall:a})=>!a&&(0,_common.someDoExist)("package.json")&&new _utils.PackageJsonEditor().hasAll(...WEBPACK_DEPENDENCIES),optional:({skipInstall:a})=>!a}];exports.removeWebpack=removeWebpack;var _default=addWebpack;exports.default=_default;